variables:
  ssh:
    - name: host
      config_key: host
      components: ['oceanbase',  'oceanbase-standalone','obproxy', 'oceanbase-ce', 'obproxy-ce', 'obagent', 'ocp-express', 'grafana', 'prometheus', 'alertmanager', 'ob-configserver', 'oblogproxy', 'ocp-server', 'ocp-server-ce', 'obbinlog-ce']
    - name: user
      config_key: username
      components: ['oceanbase',  'oceanbase-standalone','obproxy', 'oceanbase-ce', 'obproxy-ce', 'obagent', 'ocp-express', 'grafana', 'prometheus', 'alertmanager', 'ob-configserver', 'oblogproxy', 'ocp-server', 'ocp-server-ce', 'obbinlog-ce']
  server:
    - name: home_path
      config_key: home_path
      components:  ['oceanbase',  'oceanbase-standalone','obproxy', 'oceanbase-ce', 'obproxy-ce', 'obagent', 'ocp-express', 'grafana', 'prometheus', 'alertmanager', 'ob-configserver', 'oblogproxy', 'ocp-server', 'ocp-server-ce', 'obbinlog-ce']
    - name: mysql_port
      config_key: mysql_port
      components: ['oceanbase',  'oceanbase-standalone','oceanbase-ce']
  global:
    - name: password
      config_key: root_password
      components: ['oceanbase',  'oceanbase-standalone','oceanbase-ce']
    - name: password
      config_key: observer_root_password
      components: ['obproxy', 'obproxy-ce']

wrappers:
  - name: ssh
    remote_command: ssh {user}@{host} -t '{cmd}'
    local_command: "{cmd}"
  - name: ssh_client
    command: "{cmd}"
    executor: "ssh_client"

commands:
  - name: ssh
    components: ['oceanbase',  'oceanbase-standalone','obproxy', 'oceanbase-ce', 'obproxy-ce', 'obagent', 'ocp-express', 'grafana', 'prometheus', 'alertmanager', 'ob-configserver', 'oblogproxy']
    command: "cd {home_path}/log; echo 'ssh {user}@{host}'; bash --login"
    wrapper: "ssh"
    interactive: true
  - name: log
    components: ['oceanbase',  'oceanbase-standalone','obproxy', 'oceanbase-ce', 'obproxy-ce', 'obagent', 'ocp-express', 'grafana', 'prometheus', 'alertmanager','ob-configserver', 'oblogproxy', 'ocp-server-ce', 'ocp-server']
    command: "cd {home_path}/log; echo 'ssh {user}@{host}'; ls -l; bash --login"
    wrapper: "ssh"
    interactive: true
  - name: less
    command: "less {home_path}/log/observer.log"
    components: ['oceanbase',  'oceanbase-standalone','oceanbase-ce']
    wrapper: "ssh"
    interactive: true
    no_interruption: true
  - name: less
    command: "less {home_path}/log/obproxy.log"
    components: ['obproxy', 'obproxy-ce']
    wrapper: "ssh"
    interactive: true
    no_interruption: true
  - name: less
    command: "less {home_path}/log/grafana.log"
    components: ['grafana']
    wrapper: "ssh"
    interactive: true
    no_interruption: true
  - name: less
    command: "less {home_path}/log/prometheus.log"
    components: ['prometheus']
    wrapper: "ssh"
    interactive: true
    no_interruption: true
  - name: less
    command: "less {home_path}/log/alertmanager.log"
    components: ['alertmanager']
    wrapper: "ssh"
    interactive: true
    no_interruption: true
  - name: less
    command: "less {home_path}/log/ocp-server.log"
    components: ['ocp-server-ce', 'ocp-server']
    wrapper: "ssh"
    interactive: true
    no_interruption: true
  - name: less
    command: "less {home_path}/log/ob-configserver.log"
    components: ['ob-configserver']
    wrapper: "ssh"
    interactive: true
    no_interruption: true
  - name: less
    command: "less {home_path}/log/monagent.log"
    components: ['obagent']
    wrapper: "ssh"
    interactive: true
    no_interruption: true
  - name: less
    command: "less {home_path}/log/ocp-express.log"
    components: ['ocp-express']
    wrapper: "ssh"
    interactive: true
    no_interruption: true
  - name: less
    command: "less {home_path}/log/logproxy.log"
    components: ['oblogproxy', 'obbinlog-ce']
    wrapper: "ssh"
    interactive: true
    no_interruption: true
  - name: pid
    wrapper: ssh_client
    command: "pgrep -u {user} -f ^{home_path}/bin/observer"
    components: ['oceanbase',  'oceanbase-standalone','oceanbase-ce']
    no_excption: true
  - name: pid
    wrapper: ssh_client
    command: "pgrep -u {user} -f ^{home_path}/bin/obproxy"
    components: ['obproxy', 'obproxy-ce']
    no_excption: true
  - name: pid
    wrapper: ssh_client
    command: "pgrep -u {user} -f ^{home_path}/prometheus"
    components: ['prometheus']
    no_excption: true
  - name: pid
    wrapper: ssh_client
    command: "pgrep -u {user} -f ^{home_path}/bin/grafana-server"
    components: ['grafana']
    no_excption: true
  - name: pid
    wrapper: ssh_client
    command: "pgrep -u {user} -f ^{home_path}/alertmanager"
    components: ['alertmanager']
    no_excption: true
  - name: pid
    wrapper: ssh_client
    command: "pgrep -u {user} -f ^{home_path}/bin/ob_monagent"
    components: ['obagent']
    no_excption: true
  - name: pid
    wrapper: ssh_client
    command: "pgrep -u {user} -f {home_path}/lib/ocp-server.jar"
    components: ['ocp-server', 'ocp-server-ce']
    no_excption: true
  - name: pid
    wrapper: ssh_client
    command: "pgrep -u {user} -f {home_path}/bin/ob-configserver"
    components: ['ob-configserver']
    no_excption: true
  - name: pid
    wrapper: ssh_client
    command: "pgrep -u {user} -f ^{home_path}/bin/logproxy"
    components: ['oblogproxy', 'obbinlog-ce']
    no_excption: true
  - name: pid
    wrapper: ssh_client
    command: "pgrep -u {user} -f {home_path}/lib/ocp-express-server.jar"
    components: ['ocp-express']
    no_excption: true
  - name: gdb
    wrapper: "ssh"
    command: "cd {home_path}; LD_LIBRARY_PATH=./lib:$LD_LIBRARY_PATH gdb --pid=`$pid`"
    components: ['oceanbase',  'oceanbase-standalone','oceanbase-ce']
    interactive: true
    no_interruption: true
